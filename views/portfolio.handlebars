<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>{{title}}</title>
</head>

<body>
    <div class="container mx-auto">
        <a href="/dashboard"><button style='width: 150px; height:20%' class="btn mx-2 my-1 btn-transparent text-center dash-button">Dashboard</button></a>


        <h1 class="text-center my-3">Holdings</h1>
        <p id="port-val">Portfolio Value: {{portVal}}</p>
        <div id='port-delta'></div>
        <button id="market-value" style='width: 150px; height:20%' class="btn float-right my-1 btn-transparent text-center dash-button">Analyze</button>

        <table id='' class="display table-striped">
            <thead class="bg-primary">
                <tr>
                    <th scope="col" class=" ">Ticker</th>
                    <th scope="col" class=" ">Description</th>
                    <th scope="col" class=" ">Quantity</th>
                    <th scope="col" class=" ">Trade Date</th>
                    <th scope="col" class=" ">iD</th>
                </tr>
            </thead>
            <tbody>
                {{#each holdings}}
                <tr>
                    <td>{{this.ticker}}</td>
                    <td>{{this.description}}</td>
                    <td>{{this.quantity}}</td>
                    <td>{{this.date_acquired}}</td>
                    <td>{{this.id}}</td>
                </tr>
                {{/each}}
            </tbody>
        </table>

        <div id="alert-space" class="text-center my-3">

        </div>
    </div>



    <!-- Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
        crossorigin="anonymous"></script>

    <!-- jquery -->
    <script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
        crossorigin="anonymous"></script>


    <script type="text/javascript">

        const numFormat = num => {

            return '$' + num.toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
        }

        let portVal = 0;
        let oldBal = 0;


        $(document).ready(() => {

            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: "http://localhost:3000/portval"
            }).then(results => {
                console.log(results);
                results.forEach(holding => portVal += (holding.price_acquired * holding.quantity));
                $("#port-val").html(`<p>Portfolio Value: ${numFormat(portVal)}</p>`);
                oldBal = portVal;
                console.log(oldBal)
            })

        })

        $(document).on("click", "#market-value", event => {
            event.preventDefault();
            console.log("old:" + " " + oldBal);
            $("table").empty();
            $("table").removeClass("table-striped")
            $("#alert-space").html(`<div class="spinner-border text-danger" role="status"><span class="sr-only"></span></div>`)

            $.ajax({
                type: "GET",
                contentType: "application/json",
                url: "http://localhost:3000/refresh"
            }).then(results => {
                let newBal = 0;
                console.log(results)
                results.forEach(holding => newBal += (parseFloat(holding.market_price) * parseInt(holding.quantity)));



                $("#alert-space").empty();
                $("table").removeClass("table-striped");
                $("table").append(`
            <thead class="bg-primary">
                <tr>
                    <th scope="col" class=" ">Ticker</th>
                    <th scope="col" class=" ">Description</th>
                    <th scope="col" class=" ">Price Acquired</th>
                    <th scope="col" class=" ">Market Price</th>
                    <th scope="col" class=" ">Delta</th>
                    <th scope="col" class=" ">Recommend</th>
                    <th scope="col" class=" ">Quantity</th>
                    <th scope="col" class=" ">Trade Date</th>
                    <th scope="col" class=" ">iD</th>
                </tr>
            </thead>
            <tbody>

            </tbody>
                `)
                results.forEach(ticker => {

                    $("tbody").append(`
                        <tr>
                            <td>${ticker.ticker}</td>
                            <td>${ticker.description}</td>
                            <td>${ticker.price_acquired}</td>
                            <td>${ticker.market_price}</td>
                            <td>${deltaColor(ticker.delta.toFixed(2))}</td>
                            <td>${ticker.recommend}</td>
                            <td>${ticker.quantity}</td>
                            <td>${ticker.trade_date}</td>
                            <td>${ticker.id}</td>
                        </tr>
                    
                    `)
                })

                switch (true) {
                    case newBal < parseInt(oldBal):
                        $("#port-delta").html(`<p class='text-danger float-left'>Down by $${formatNumber(newBal - parseInt(oldBal))}</p>`);
                        break;
                    case newBal > parseInt(oldBal):
                        $("#port-delta").html(`<p class='text-success float-left'>Up by $${formatNumber(newBal - parseInt(oldBal))}</p>`);
                        break;
                    case newBal === parseInt(oldBal):
                        $("#port-delta").html(`<p class='text-warning float-left'>No change</p>`);
                        break;
                }



            })



        });

        function formatNumber(num) {
            return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
        }

        const deltaColor = num => {
            if (num > 0) {
                return num.fontcolor("green");
            }

            if (num < 0) {
                return num.fontcolor("red");
            }


            return num.fontcolor("black");

        }

    </script>
</body>



</html>